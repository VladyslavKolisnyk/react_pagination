{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","components/Item/Item.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onChangePage","totalPages","Math","ceil","pages","className","cn","disabled","href","onClick","map","page","active","Items","currentItems","item","slice","App","useState","setCurrentPage","setPerPage","startItem","endItem","min","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAErC,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,QAASC,EACZ,EADYA,YAAaC,EACzB,EADyBA,aAEvBC,EAAqBC,KAAKC,KAAKN,EAAQC,GACvCM,EAAkBd,EAAW,EAAGW,GAatC,OACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBR,IAA3C,SACE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QApBW,WACbV,EAAc,GAChBC,EAAaD,EAAc,IAazB,oBAWDK,EAAMM,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQb,IAAgBY,IADvD,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACHE,IAASZ,GACXC,EAAaW,IANnB,SAWGA,KAbEA,MAkBT,oBAAIN,UACFC,IAAG,YAAa,CAAEC,SAAUR,IAAgBE,IAD9C,SAIE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAlDW,WACbV,EAAcE,GAChBD,EAAaD,EAAc,IA2CzB,wBC1DKc,EAAyB,SAAC,GAEhC,IADLhB,EACI,EADJA,MAAOC,EACH,EADGA,QAASC,EACZ,EADYA,YAKVe,EAHQxB,EAAW,EAAGO,GACzBa,KAAI,SAAAK,GAAI,qBAAYA,MAGpBC,OAAOjB,EAAc,GAAKD,EAASC,EAAcD,GAEpD,OACE,6BACGgB,EAAaJ,KAAI,SAAAK,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SCdnBE,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBoB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBsB,EAAhB,KAEMC,EAAqBtB,EAAcD,EAAWA,EAC9CwB,EAAkBpB,KAAKqB,IAAIF,EAAYvB,EAF/B,IAId,OACE,sBAAKO,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCsB,EAAY,EAD7C,cACoDC,EADpD,eARU,GAQV,OAIA,sBAAKjB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAO3B,EACP4B,SAAU,SAACC,GACTP,GAAYO,EAAMC,OAAOH,OACzBN,EAAe,IAPnB,UAUE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAGJ,uBAAOI,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MApCQ,GAqCRC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACW,GAAD,OAAUQ,EAAeR,MAGzC,cAAC,EAAD,CACEd,MA3CQ,GA4CRC,QAASA,EACTC,YAAaA,QCpDrB+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.724414af.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onChangePage: (pages: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total, perPage, currentPage, onChangePage,\n}) => {\n  const totalPages: number = Math.ceil(total / perPage);\n  const pages: number[] = getNumbers(1, totalPages);\n  const onPrevLink = () => {\n    if (currentPage > 1) {\n      onChangePage(currentPage - 1);\n    }\n  };\n\n  const onNextLink = () => {\n    if (currentPage < totalPages) {\n      onChangePage(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={onPrevLink}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={cn('page-item', { active: currentPage === page })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => {\n              if (page !== currentPage) {\n                onChangePage(page);\n              }\n            }}\n\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={\n        cn('page-item', { disabled: currentPage === totalPages })\n      }\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={onNextLink}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React from 'react';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n}\n\nexport const Items: React.FC<Props> = ({\n  total, perPage, currentPage,\n}) => {\n  const items = getNumbers(1, total)\n    .map(item => `Item ${item}`);\n\n  const currentItems = items\n    .slice((currentPage - 1) * perPage, currentPage * perPage);\n\n  return (\n    <ul>\n      {currentItems.map(item => (\n        <li data-cy=\"item\" key={item}>{item}</li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { Pagination } from './components/Pagination/Pagination';\nimport { Items } from './components/Item/Item';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const TOTAL = 42;\n  const startItem: number = (currentPage * perPage) - perPage;\n  const endItem: number = Math.min(startItem + perPage, TOTAL);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem + 1} - ${endItem} of ${TOTAL})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={TOTAL}\n        perPage={perPage}\n        currentPage={currentPage}\n        onChangePage={(page) => setCurrentPage(page)}\n      />\n\n      <Items\n        total={TOTAL}\n        perPage={perPage}\n        currentPage={currentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}